{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\React_Todo_APP\\\\to-do\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleCheck, faPen, faTrashCan } from '@fortawesome/free-solid-svg-icons';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Tasks (ToDo List) State\n  //main state storing todo tasks\n  const [toDo, setToDo] = useState([{\n    id: 1,\n    title: 'Task 1',\n    status: false\n  }, {\n    id: 2,\n    title: 'Task 2',\n    status: false\n  }]);\n\n  // Temp State\n  //use inputs to add new task or update\n  const [newTask, setNewTask] = useState('');\n  const [updateData, setUpdateData] = useState('');\n\n  //functions that run the app\n  // Add task \n  const addTask = () => {\n    if (newTask) {\n      let num = toDo.length + 1;\n      let newEntry = {\n        id: num,\n        title: newTask,\n        status: false\n      };\n      setToDo([...toDo, newEntry]);\n      setNewTask('');\n    }\n  };\n\n  // Delete task \n  const deleteTask = id => {\n    let newTasks = toDo.filter(task => task.id !== id);\n    setToDo(newTasks);\n  };\n\n  // Mark task as done or completed\n  const markDone = id => {\n    let newTask = toDo.map(task => {\n      if (task.id === id) {\n        return {\n          ...task,\n          status: !task.status\n        };\n      }\n      return task;\n    });\n    setToDo(newTask);\n  };\n\n  // Cancel update\n  const cancelUpdate = () => {\n    setUpdateData('');\n  };\n\n  // Change task for update\n  const changeTask = e => {\n    let newEntry = {\n      id: updateData.id,\n      title: task.title,\n      status: updateData.status ? true : false\n    };\n  };\n\n  // Update task\n  const updateTask = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container App\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"To Do list App (Reactjs)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          value: updateData && updateData.title,\n          onChange: e => changeTask(e),\n          className: \"form-control form-control-lg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-lg btn-success mr-20\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-lg btn-warning\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          value: newTask,\n          onChange: e => setNewTask(e.target.value),\n          className: \"form-control form-control-lg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addTask,\n          className: \"btn btn-lg btn-success\",\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), toDo && toDo.length ? '' : 'No Tasks...', toDo && toDo.sort((a, b) => a.id > b.id ? 1 : -1).map((task, index) => {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col taskBg\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: task.status ? 'done' : '',\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"taskNumber\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"taskText\",\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"iconsWrap\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"check\",\n              title: \"completed / Not completed\",\n              onClick: e => markDone(task.id),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faCircleCheck\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this), task.status ? null : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"edit\",\n              title: \"Edit\",\n              onClick: () => setUpdateData({\n                id: task.id,\n                title: task.title,\n                status: task.status ? true : false\n              }),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faPen\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"delete\",\n              title: \"Delete\",\n              onClick: () => deleteTask(task.id),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faTrashCan\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this)\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"izSIBJPKBw8Ggq4sGaMcErT6csU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","FontAwesomeIcon","faCircleCheck","faPen","faTrashCan","App","toDo","setToDo","id","title","status","newTask","setNewTask","updateData","setUpdateData","addTask","num","length","newEntry","deleteTask","newTasks","filter","task","markDone","map","cancelUpdate","changeTask","e","updateTask","target","value","sort","a","b","index"],"sources":["C:/Users/Dell/Desktop/React_Todo_APP/to-do/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCircleCheck, faPen, faTrashCan } from '@fortawesome/free-solid-svg-icons' \n\nimport './App.css';\n\n\nfunction App() {\n  // Tasks (ToDo List) State\n  //main state storing todo tasks\n  const [toDo, setToDo] = useState([\n    {id: 1, title: 'Task 1', status: false},\n    {id: 2, title: 'Task 2', status: false}\n  ])\n\n  // Temp State\n  //use inputs to add new task or update\n  const [newTask, setNewTask] = useState('');\n  const [updateData, setUpdateData] = useState('');\n\n  //functions that run the app\n  // Add task \n  const addTask = () => {\n    if(newTask){\n      let num = toDo.length + 1;\n      let newEntry = {id:num, title:newTask, status:false}\n      setToDo([...toDo, newEntry])\n      setNewTask('');\n    }\n  }\n\n  // Delete task \n  const deleteTask = (id) => {\n    let newTasks = toDo.filter(task => task.id !== id)\n    setToDo(newTasks);\n  }\n\n  // Mark task as done or completed\n  const markDone = (id) => {\n    let newTask = toDo.map( task => {\n      if(task.id === id ){\n        return({...task, status: !task.status })\n      }\n      return task;\n    })\n    setToDo(newTask);\n  }\n\n  // Cancel update\n  const cancelUpdate = () => {\n    setUpdateData('');\n  }\n\n  // Change task for update\n  const changeTask = (e) => {\n    let newEntry ={\n      id:updateData.id,\n      title:task.title,\n      status:updateData.status ? true : false\n    }\n  }\n\n  // Update task\n  const updateTask = () => {\n\n  }\n\n  return (\n    <div className=\"container App\">\n      <br></br>\n      <h2>To Do list App (Reactjs)</h2>\n      <br></br> \n      {/* Form to update task */}\n      <div className='row'>\n        <div className='col'>\n          <input value={updateData && updateData.title} onChange={(e)=>changeTask(e)} className='form-control form-control-lg'></input>\n        </div>\n        <div className='col-auto'>\n          <button className='btn btn-lg btn-success mr-20'>Update</button>\n          <button className='btn btn-lg btn-warning'>Cancel</button>\n        </div>\n      </div>\n      {/* Form to add task */}\n      <div className='row'>\n        <div className='col'>\n          <input value={newTask} onChange={(e)=> setNewTask(e.target.value)} className='form-control form-control-lg'></input>\n        </div>\n        <div className='col-auto'>\n          <button onClick={addTask} className='btn btn-lg btn-success'>\n            Add Task\n          </button>\n        </div>\n\n      </div>\n\n      {/* Display ToDos */}\n\n      {toDo && toDo.length ? '' : 'No Tasks...'}\n\n      {toDo && toDo\n        .sort((a,b)=> a.id > b.id ? 1 : -1)\n        .map((task, index ) => {\n          return(\n            <React.Fragment key={task.id}>\n              <div className='col taskBg'>\n                <div className={task.status ? 'done' : ''}>\n                <span className='taskNumber'>{index + 1}</span>\n                <span className='taskText'>{task.title}</span>\n                </div>\n                <div className='iconsWrap'>\n                  <span className='check' title='completed / Not completed' onClick={(e)=> markDone(task.id)}>\n                    <FontAwesomeIcon icon={faCircleCheck}></FontAwesomeIcon>\n                  </span>\n\n                  {task.status ? null : (\n                    <span className='edit' title='Edit' onClick={()=> setUpdateData({\n                      id: task.id,\n                      title: task.title,\n                      status: task.status ? true : false\n                    })}>\n                    <FontAwesomeIcon icon={faPen}></FontAwesomeIcon>\n                    </span>\n                  )}\n\n                  <span className='delete' title='Delete' onClick={()=> deleteTask(task.id)}>\n                    <FontAwesomeIcon icon={faTrashCan}></FontAwesomeIcon>\n                  </span>\n                </div>\n              </div>\n            </React.Fragment>\n          )\n        })\n      }\n      \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}