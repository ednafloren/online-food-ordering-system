{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\React_Todo_APP\\\\to-do\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleCheck, faPen, faTrashCan } from '@fortawesome/free-solid-svg-icons';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Tasks (ToDo List) State\n  //////////////////////////main state storing todo tasks\n  const [toDo, setToDo] = useState([\n    // {id: 1, title: 'Task 1', status: false},\n    // {id: 2, title: 'Task 2', status: false}\n  ]);\n\n  // Temp State\n  /////////////use inputs to add new task or update\n  const [newTask, setNewTask] = useState('');\n  const [updateData, setUpdateData] = useState('');\n\n  //functions that run the app\n  // Add task \n  ///////////\n  const addTask = () => {};\n\n  // Delete task \n  //////////////\n  const deleteTask = id => {};\n\n  // Mark task as done or completed\n  /////////////////////////////////\n  const markDone = id => {};\n\n  // Cancel update\n  ////////////////\n  const cancelUpdate = () => {};\n\n  // Change task for update\n  /////////////////////////\n  const changeTask = e => {};\n\n  // Update task\n  //////////////\n  const updateTask = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container App\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"To Do list App (Reactjs)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), toDo && toDo.length ? '' : 'No Tasks...']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qQYsGMObXVXa/RgT+zs0is0kec4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","FontAwesomeIcon","faCircleCheck","faPen","faTrashCan","App","toDo","setToDo","newTask","setNewTask","updateData","setUpdateData","addTask","deleteTask","id","markDone","cancelUpdate","changeTask","e","updateTask","length"],"sources":["C:/Users/Dell/Desktop/React_Todo_APP/to-do/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCircleCheck, faPen, faTrashCan } from '@fortawesome/free-solid-svg-icons' \n\nimport './App.css';\n\n\nfunction App() {\n  // Tasks (ToDo List) State\n  //////////////////////////main state storing todo tasks\n  const [toDo, setToDo] = useState([\n    // {id: 1, title: 'Task 1', status: false},\n    // {id: 2, title: 'Task 2', status: false}\n  ])\n\n  // Temp State\n  /////////////use inputs to add new task or update\n  const [newTask, setNewTask] = useState('');\n  const [updateData, setUpdateData] = useState('');\n\n  //functions that run the app\n  // Add task \n  ///////////\n  const addTask = () => {\n  }\n\n  // Delete task \n  //////////////\n  const deleteTask = (id) => {\n    \n  }\n\n  // Mark task as done or completed\n  /////////////////////////////////\n  const markDone = (id) => {\n\n  }\n\n  // Cancel update\n  ////////////////\n  const cancelUpdate = () => {\n\n  }\n\n  // Change task for update\n  /////////////////////////\n  const changeTask = (e) => {\n\n  }\n\n  // Update task\n  //////////////\n  const updateTask = () => {\n\n  }\n\n  return (\n    <div className=\"container App\">\n      <br></br>\n      <h2>To Do list App (Reactjs)</h2>\n      <br></br> \n\n      {/* Display ToDos */}\n\n      {toDo && toDo.length ? '' : 'No Tasks...'}\n      \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,sCAAsC;AAC7C,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,aAAa,EAAEC,KAAK,EAAEC,UAAU,QAAQ,mCAAmC;AAEpF,OAAO,WAAW;AAAC;AAGnB,SAASC,GAAG,GAAG;EAAA;EACb;EACA;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC;IAC/B;IACA;EAAA,CACD,CAAC;;EAEF;EACA;EACA,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA;EACA;EACA,MAAMY,OAAO,GAAG,MAAM,CACtB,CAAC;;EAED;EACA;EACA,MAAMC,UAAU,GAAIC,EAAE,IAAK,CAE3B,CAAC;;EAED;EACA;EACA,MAAMC,QAAQ,GAAID,EAAE,IAAK,CAEzB,CAAC;;EAED;EACA;EACA,MAAME,YAAY,GAAG,MAAM,CAE3B,CAAC;;EAED;EACA;EACA,MAAMC,UAAU,GAAIC,CAAC,IAAK,CAE1B,CAAC;;EAED;EACA;EACA,MAAMC,UAAU,GAAG,MAAM,CAEzB,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,eAAe;IAAA,wBAC5B;MAAA;MAAA;MAAA;IAAA,QAAS,eACT;MAAA,UAAI;IAAwB;MAAA;MAAA;MAAA;IAAA,QAAK,eACjC;MAAA;MAAA;MAAA;IAAA,QAAS,EAIRb,IAAI,IAAIA,IAAI,CAACc,MAAM,GAAG,EAAE,GAAG,aAAa;EAAA;IAAA;IAAA;IAAA;EAAA,QAErC;AAEV;AAAC,GA7DQf,GAAG;AAAA,KAAHA,GAAG;AA+DZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}