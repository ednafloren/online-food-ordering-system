{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\React_Todo_APP\\\\to-do\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport AddTaskForm from './components/AddTaskForm.jsx';\nimport UpdateForm from './components/UpdateForm.jsx';\nimport ToDo from './components/ToDo.jsx';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Tasks (ToDo List) State\n  //main state storing todo tasks\n  const [toDo, setToDo] = useState([{}]);\n\n  // Temp State\n  //use inputs to add new task or update\n  const [newTask, setNewTask] = useState('');\n  const [updateData, setUpdateData] = useState('');\n\n  //functions that run the app\n  // Add task \n  const addTask = () => {\n    if (newTask) {\n      let num = toDo.length + 1;\n      let newEntry = {\n        id: num,\n        title: newTask,\n        status: false\n      };\n      setToDo([...toDo, newEntry]);\n      setNewTask('');\n    }\n  };\n\n  // Delete task \n  const deleteTask = id => {\n    let newTasks = toDo.filter(task => task.id !== id);\n    setToDo(newTasks);\n  };\n\n  // Mark task as done or completed\n  const markDone = id => {\n    let newTask = toDo.map(task => {\n      if (task.id === id) {\n        return {\n          ...task,\n          status: !task.status\n        };\n      }\n      return task;\n    });\n    setToDo(newTask);\n  };\n\n  // Cancel update\n  const cancelUpdate = () => {\n    setUpdateData('');\n  };\n\n  // Change task for update\n  const changeTask = e => {\n    let newEntry = {\n      id: updateData.id,\n      title: e.target.value,\n      status: updateData.status ? true : false\n    };\n    setUpdateData(newEntry);\n  };\n\n  // Update task\n  const updateTask = () => {\n    let filterRecords = [...toDo].filter(task => task.id !== updateData.id);\n    let updatedObject = [...filterRecords, updateData];\n    setToDo(updatedObject);\n    setUpdateData('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container App\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"To Do list App (Reactjs)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), updateData && updateData ? /*#__PURE__*/_jsxDEV(UpdateForm, {\n      updateData: updateData,\n      changeTask: changeTask,\n      updateTask: updateTask,\n      cancelUpdate: cancelUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(AddTaskForm, {\n      newTask: newTask,\n      setNewTask: setNewTask,\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), toDo && toDo.length ? '' : 'No Tasks...', /*#__PURE__*/_jsxDEV(ToDo, {\n      toDo: toDo,\n      markDone: markDone,\n      setUpdateData: setUpdateData,\n      deleteTask: deleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rxGzWfXHPtJAm7M835lDbjpMSRw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","AddTaskForm","UpdateForm","ToDo","App","toDo","setToDo","newTask","setNewTask","updateData","setUpdateData","addTask","num","length","newEntry","id","title","status","deleteTask","newTasks","filter","task","markDone","map","cancelUpdate","changeTask","e","target","value","updateTask","filterRecords","updatedObject"],"sources":["C:/Users/Dell/Desktop/React_Todo_APP/to-do/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport AddTaskForm from './components/AddTaskForm.jsx';\nimport UpdateForm from './components/UpdateForm.jsx';\nimport ToDo from './components/ToDo.jsx';\nimport 'bootstrap/dist/css/bootstrap.min.css'; \nimport './App.css';\n\n\nfunction App() {\n  // Tasks (ToDo List) State\n  //main state storing todo tasks\n  const [toDo, setToDo] = useState([\n    {}\n  ])\n\n  // Temp State\n  //use inputs to add new task or update\n  const [newTask, setNewTask] = useState('');\n  const [updateData, setUpdateData] = useState('');\n\n  //functions that run the app\n  // Add task \n  const addTask = () => {\n    if(newTask){\n      let num = toDo.length + 1;\n      let newEntry = {id:num, title:newTask, status:false}\n      setToDo([...toDo, newEntry])\n      setNewTask('');\n    }\n  }\n\n  // Delete task \n  const deleteTask = (id) => {\n    let newTasks = toDo.filter(task => task.id !== id)\n    setToDo(newTasks);\n  }\n\n  // Mark task as done or completed\n  const markDone = (id) => {\n    let newTask = toDo.map( task => {\n      if(task.id === id ){\n        return({...task, status: !task.status })\n      }\n      return task;\n    })\n    setToDo(newTask);\n  }\n\n  // Cancel update\n  const cancelUpdate = () => {\n    setUpdateData('');\n  }\n\n  // Change task for update\n  const changeTask = (e) => {\n    let newEntry ={\n      id:updateData.id,\n      title:e.target.value,\n      status:updateData.status ? true : false\n    }\n    setUpdateData(newEntry);\n  }\n\n  // Update task\n  const updateTask = () => {\n    let filterRecords = [...toDo].filter( task => task.id !== updateData.id);\n    let updatedObject = [...filterRecords,updateData]\n    setToDo(updatedObject);\n    setUpdateData('')\n  }\n\n  return (\n    <div className=\"container App\">\n      <br></br>\n      <h2>To Do list App (Reactjs)</h2>\n      <br></br> \n      {/* Form to update task */}\n      {updateData && updateData ? (\n        <UpdateForm\n          updateData={updateData}\n          changeTask={changeTask} \n          updateTask={updateTask}\n          cancelUpdate={cancelUpdate}\n        />\n      ): (\n        <AddTaskForm\n          newTask={newTask}\n          setNewTask={setNewTask}\n          addTask={addTask}\n        />\n      )}\n\n      {/* Display ToDos */}\n\n      {toDo && toDo.length ? '' : 'No Tasks...'}\n\n      <ToDo\n        toDo={toDo}\n        markDone={markDone}\n        setUpdateData={setUpdateData}\n        deleteTask={deleteTask}\n      />\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}